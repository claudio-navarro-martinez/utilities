package kata 

import (
	"fmt"
	"strconv"
)

func DigitalRoot(n int) int {
	var aux int = 0
	formatted := strconv.Itoa(n)
  fmt.Println("empezamos:",n)
	for len(formatted) > 1 {
		fmt.Println(formatted)
    aux = 0
		for i := 0; i < len(formatted); i++ {

			aByteToInt, _ := strconv.Atoi(formatted[i : i+1])
      fmt.Println("->", aByteToInt)
			aux = aux + aByteToInt
		}
		formatted = strconv.Itoa(aux)
    fmt.Println("itoa->", formatted)
	}
	return aux
}

package kata_test

import (
  . "github.com/onsi/ginkgo"
  . "github.com/onsi/gomega"
  . "codewarrior/kata"
)

var _ = Describe("Test Example", func() {
  It("fixed tests", func() {
    Expect(DigitalRoot(16)).To(Equal(7))
    Expect(DigitalRoot(195)).To(Equal(6))
    Expect(DigitalRoot(992)).To(Equal(2))
    Expect(DigitalRoot(167346)).To(Equal(9))
    Expect(DigitalRoot(0)).To(Equal(0))
  })
})
